library(usdm)
library(caret)
library(corrplot)
library(phylolm)
library(performance)
library(see)
library(gridExtra)
ungulatesData <- read.csv("https://raw.githubusercontent.com/naturalis/trait-organismal-ungulates/master/data/CSV/ungulatesTraits.csv")
omi <- read.csv("https://raw.githubusercontent.com/naturalis/trait-geo-diverse-ungulates/master/results/OMI/niche_traits.csv")
tree <- read.tree("https://raw.githubusercontent.com/naturalis/trait-organismal-ungulates/master/data/phylogeny/ungulates.tree")
ungulatesData <- ungulatesData[2:60]
names(omi)[names(omi)=="X"] <- "CanonicalName"
dataset <- merge(ungulatesData, omi, by="CanonicalName")
dataset$CanonicalName <- gsub(" ", "_", dataset$CanonicalName)
# Clean up the global environment
rm(ungulatesData, omi)
# Changed Equus asinus to Equus africanus in the tree
tree$tip.label[tree$tip.label=="Equus_asinus"] <- "Equus_africanus"
# Check Which species aren't in the tree
dropRows <- setdiff(dataset$CanonicalName, tree$tip.label)
# Drop rows that aren't in the tree (check manually if these are domesticated)
row.names(dataset) <- dataset$CanonicalName
dataset <- dataset[!(row.names(dataset) %in% dropRows), ]
# Drop tips that aren't in dataset
dropTips <- setdiff(tree$tip.label, dataset$CanonicalName)
tree <- drop.tip(tree, dropTips)
# Final check to see if there are any differences
setdiff(dataset$CanonicalName, tree$tip.label)
setdiff(tree$tip.label, dataset$CanonicalName)
rm(dropRows, dropTips)
# Rename column with dots in the name
names(dataset)[names(dataset)=="X21.1_PopulationDensity_n.km2"] <- "X21.1_PopulationDensity_n_km2"
# Remove traits that (almost) only consist of missing values (>100 NA)
dataset <- subset(dataset, select = -c(X5.4_WeaningBodyMass_g, X13.3_WeaningHeadBodyLen_mm, X13.2_NeonateHeadBodyLen_mm, X18.1_BasalMetRate_mLO2hr, X5.2_BasalMetRateMass_g, X2.1_AgeatEyeOpening_d, X8.1_AdultForearmLen_mm, X10.1_PopulationGrpSize))
# Remove traits without any information gain (only consist of one value)
dataset <- subset(dataset, select = -c(Motility, ParentalCare, X12.2_Terrestriality))
# Remove traits that are almost identical to other traits
dataset <- subset(dataset, select = -c(PullStrength, NumOffspring, BreedingInterval, Diet, MaturityReachFemale, MaturityReachMale, X22.2_HomeRange_Indiv_km2, X5.3_NeonateBodyMass_g, X16.1_LittersPerYear,X7.1_DispersalAge_d))
dataset$X1.1_ActivityCycle <- as.factor(dataset$X1.1_ActivityCycle)
dataset$X6.1_DietBreadth <- as.factor(dataset$X6.1_DietBreadth)
dataset$X12.1_HabitatBreadth <- as.factor(dataset$X12.1_HabitatBreadth)
dataset$X6.2_TrophicLevel <- as.factor(dataset$X6.2_TrophicLevel)
dataset$Sociality <- as.factor(dataset$Sociality)
dataset$SocialHierarchy <- as.factor(dataset$SocialHierarchy)
dataset$NumMales <- as.factor(dataset$NumMales)
dataset$MatingSystem <- as.factor(dataset$MatingSystem)
dataset$YearRoundBreeding <- as.factor(dataset$YearRoundBreeding)
dataset$DevelopmentStrategy <- as.factor(dataset$DevelopmentStrategy)
dataset$HeadOrnaments <- as.factor(dataset$HeadOrnaments)
dataset$NaturalPredators <- as.factor(dataset$NaturalPredators)
# Do the VIF analysis
source("VIF.R")
# Final VIF values
vif(vifPredictors)
View(vifPredictors)
## PROCESS DATASET
# A dataset without missing values is made. The X12.1_HabitatBreadth and
# X6.1_DietBreadth are removed, due to there being not enough data for the
# domesticated species. It contains the Domestication trait, and also the
# CanonicalNames to match the data with the tree. The tree tips that aren't in
# the final data are dropped.
predictors$X6.1_DietBreadth <- NULL
```{r model selection, results='hide'}
# Add factor predictors to numeric predictors
factors <- dplyr::select_if(dataset, is.factor)
predictors <- cbind(vifPredictors, factors)
View(predictors)
## PROCESS DATASET
# A dataset without missing values is made. The X12.1_HabitatBreadth and
# X6.1_DietBreadth are removed, due to there being not enough data for the
# domesticated species. It contains the Domestication trait, and also the
# CanonicalNames to match the data with the tree. The tree tips that aren't in
# the final data are dropped.
predictors$X6.1_DietBreadth <- NULL
predictors$X12.1_HabitatBreadth <- NULL
modelData <- cbind(dataset$CanonicalName, dataset$Domestication,predictors)
names(modelData)[names(modelData)=="dataset$Domestication"] <- "Domestication"
names(modelData)[names(modelData)=="dataset$CanonicalName"] <- "CanonicalName"
# Only the rows without any missing values are selected
modelData <- modelData[complete.cases(modelData),]
# Dropping species from the tree
dropTips <- setdiff(tree$tip.label, modelData$CanonicalName)
modelTree <- drop.tip(tree, dropTips)
## DEPENDENT VARIABLE
# The dependent variable should be in a binary state. This means that the
# Domestication trait needs to be converted to 0-1 instead of the 1-2 it's now.
# The 'wild' state (2) will be converted to the zero state (0). This way 'wild'
# appears as 0 and 'domesticated' appears as 1.
modelData$Domestication[modelData$Domestication==2] <- 0
modelData$CanonicalName <- NULL
test <- modelData
test$X1.1_ActivityCycle <- droplevels(test$X1.1_ActivityCycle)
test$X1.1_ActivityCycle <- NULL
## FORMULAS
# The input formula is defined, which is going to be used as input for the
# phyloglmstep function.
formula <- Domestication ~ X5.1_AdultBodyMass_g + X9.1_GestationLen_d + X15.1_LitterSize +
X17.1_MaxLongevity_m + X21.1_PopulationDensity_n_km2 + X23.1_SexualMaturityAge_d +
X10.2_SocialGrpSize + X25.1_WeaningAge_d + Lifespan + AVGMovingSpeed + AVGTravelDistance +
Aspect + BulkDensity + ClayPercentage + minTempWarmest + PETseasonality + PETWettestQuarter +
OrganicCarbon + PhCaCL + Slope + bio15 + bio18 + bio19 + X1.1_ActivityCycle +
X6.2_TrophicLevel + Sociality + SocialHierarchy + NumMales + MatingSystem + YearRoundBreeding +
DevelopmentStrategy + HeadOrnaments + NaturalPredators
formula <- Domestication ~ X5.1_AdultBodyMass_g + X9.1_GestationLen_d + X15.1_LitterSize +
X17.1_MaxLongevity_m + X21.1_PopulationDensity_n_km2 + X23.1_SexualMaturityAge_d +
X10.2_SocialGrpSize + X25.1_WeaningAge_d + Lifespan + AVGMovingSpeed + AVGTravelDistance +
Aspect + BulkDensity + ClayPercentage + minTempWarmest + PETseasonality + PETWettestQuarter +
OrganicCarbon + PhCaCL + Slope + bio15 + bio18 + bio19 +
X6.2_TrophicLevel + Sociality + SocialHierarchy + NumMales + MatingSystem + YearRoundBreeding +
DevelopmentStrategy + HeadOrnaments + NaturalPredators
View(test)
#Using the phyloglmstep
phyloglmstep(formula, starting.formula = NULL, data=test, phy=modelTree,
method= "logistic_IG10", direction = "forward", trace = 2,
btol = 20, log.alpha.bound = 4, start.beta=NULL,
start.alpha=NULL, boot = 0, full.matrix = TRUE, k=2)
warnings()
# Add factor predictors to numeric predictors
factors <- dplyr::select_if(dataset, is.factor)
predictors <- cbind(vifPredictors, factors)
# Do the model selection
source("ModelSelection.R")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(ape)
library(dplyr)
library(usdm)
library(caret)
library(corrplot)
library(phylolm)
library(performance)
library(see)
library(gridExtra)
ungulatesData <- read.csv("https://raw.githubusercontent.com/naturalis/trait-organismal-ungulates/master/data/CSV/ungulatesTraits.csv")
omi <- read.csv("https://raw.githubusercontent.com/naturalis/trait-geo-diverse-ungulates/master/results/OMI/niche_traits.csv")
tree <- read.tree("https://raw.githubusercontent.com/naturalis/trait-organismal-ungulates/master/data/phylogeny/ungulates.tree")
View(ungulatesData)
ungulatesData <- ungulatesData[2:60]
names(omi)[names(omi)=="X"] <- "CanonicalName"
dataset <- merge(ungulatesData, omi, by="CanonicalName")
dataset$CanonicalName <- gsub(" ", "_", dataset$CanonicalName)
# Clean up the global environment
rm(ungulatesData, omi)
# Changed Equus asinus to Equus africanus in the tree
tree$tip.label[tree$tip.label=="Equus_asinus"] <- "Equus_africanus"
# Check Which species aren't in the tree
dropRows <- setdiff(dataset$CanonicalName, tree$tip.label)
# Drop rows that aren't in the tree (check manually if these are domesticated)
row.names(dataset) <- dataset$CanonicalName
dataset <- dataset[!(row.names(dataset) %in% dropRows), ]
# Drop tips that aren't in dataset
dropTips <- setdiff(tree$tip.label, dataset$CanonicalName)
tree <- drop.tip(tree, dropTips)
# Final check to see if there are any differences
setdiff(dataset$CanonicalName, tree$tip.label)
setdiff(tree$tip.label, dataset$CanonicalName)
rm(dropRows, dropTips)
# Rename column with dots in the name
names(dataset)[names(dataset)=="X21.1_PopulationDensity_n.km2"] <- "X21.1_PopulationDensity_n_km2"
# Remove traits that (almost) only consist of missing values (>100 NA)
dataset <- subset(dataset, select = -c(X5.4_WeaningBodyMass_g, X13.3_WeaningHeadBodyLen_mm, X13.2_NeonateHeadBodyLen_mm, X18.1_BasalMetRate_mLO2hr, X5.2_BasalMetRateMass_g, X2.1_AgeatEyeOpening_d, X8.1_AdultForearmLen_mm, X10.1_PopulationGrpSize))
# Remove traits without any information gain (only consist of one value)
dataset <- subset(dataset, select = -c(Motility, ParentalCare, X12.2_Terrestriality))
# Remove traits that are almost identical to other traits
dataset <- subset(dataset, select = -c(PullStrength, NumOffspring, BreedingInterval, Diet, MaturityReachFemale, MaturityReachMale, X22.2_HomeRange_Indiv_km2, X5.3_NeonateBodyMass_g, X16.1_LittersPerYear,X7.1_DispersalAge_d))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(ape)
library(dplyr)
library(usdm)
library(caret)
library(corrplot)
library(phylolm)
library(performance)
library(see)
library(gridExtra)
ungulatesData <- read.csv("https://raw.githubusercontent.com/naturalis/trait-organismal-ungulates/master/data/CSV/ungulatesTraits.csv")
omi <- read.csv("https://raw.githubusercontent.com/naturalis/trait-geo-diverse-ungulates/master/results/OMI/niche_traits.csv")
tree <- read.tree("https://raw.githubusercontent.com/naturalis/trait-organismal-ungulates/master/data/phylogeny/ungulates.tree")
ungulatesData <- ungulatesData[2:60]
names(omi)[names(omi)=="X"] <- "CanonicalName"
dataset <- merge(ungulatesData, omi, by="CanonicalName")
dataset$CanonicalName <- gsub(" ", "_", dataset$CanonicalName)
# Clean up the global environment
rm(ungulatesData, omi)
# Changed Equus asinus to Equus africanus in the tree
tree$tip.label[tree$tip.label=="Equus_asinus"] <- "Equus_africanus"
# Check Which species aren't in the tree
dropRows <- setdiff(dataset$CanonicalName, tree$tip.label)
# Drop rows that aren't in the tree (check manually if these are domesticated)
row.names(dataset) <- dataset$CanonicalName
dataset <- dataset[!(row.names(dataset) %in% dropRows), ]
# Drop tips that aren't in dataset
dropTips <- setdiff(tree$tip.label, dataset$CanonicalName)
tree <- drop.tip(tree, dropTips)
# Final check to see if there are any differences
setdiff(dataset$CanonicalName, tree$tip.label)
setdiff(tree$tip.label, dataset$CanonicalName)
rm(dropRows, dropTips)
# Rename column with dots in the name
names(dataset)[names(dataset)=="X21.1_PopulationDensity_n.km2"] <- "X21.1_PopulationDensity_n_km2"
# Remove traits that (almost) only consist of missing values (>100 NA)
dataset <- subset(dataset, select = -c(X5.4_WeaningBodyMass_g, X13.3_WeaningHeadBodyLen_mm, X13.2_NeonateHeadBodyLen_mm, X18.1_BasalMetRate_mLO2hr, X5.2_BasalMetRateMass_g, X2.1_AgeatEyeOpening_d, X8.1_AdultForearmLen_mm, X10.1_PopulationGrpSize))
# Remove traits without any information gain (only consist of one value)
dataset <- subset(dataset, select = -c(Motility, ParentalCare, X12.2_Terrestriality))
# Remove traits that are almost identical to other traits
dataset <- subset(dataset, select = -c(PullStrength, NumOffspring, BreedingInterval, Diet, MaturityReachFemale, MaturityReachMale, X22.2_HomeRange_Indiv_km2, X5.3_NeonateBodyMass_g, X16.1_LittersPerYear,X7.1_DispersalAge_d))
dataset$X1.1_ActivityCycle <- as.factor(dataset$X1.1_ActivityCycle)
dataset$X6.1_DietBreadth <- as.factor(dataset$X6.1_DietBreadth)
dataset$X12.1_HabitatBreadth <- as.factor(dataset$X12.1_HabitatBreadth)
dataset$X6.2_TrophicLevel <- as.factor(dataset$X6.2_TrophicLevel)
dataset$Sociality <- as.factor(dataset$Sociality)
dataset$SocialHierarchy <- as.factor(dataset$SocialHierarchy)
dataset$NumMales <- as.factor(dataset$NumMales)
dataset$MatingSystem <- as.factor(dataset$MatingSystem)
dataset$YearRoundBreeding <- as.factor(dataset$YearRoundBreeding)
dataset$DevelopmentStrategy <- as.factor(dataset$DevelopmentStrategy)
dataset$HeadOrnaments <- as.factor(dataset$HeadOrnaments)
dataset$NaturalPredators <- as.factor(dataset$NaturalPredators)
# Do the VIF analysis
source("VIF.R")
# Final VIF values
vif(vifPredictors)
# Add factor predictors to numeric predictors
factors <- dplyr::select_if(dataset, is.factor)
predictors <- cbind(vifPredictors, factors)
# Do the model selection
source("ModelSelection.R")
# Remove unneeded variables
rm(vifPredictors, factors)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(ape)
library(dplyr)
library(usdm)
library(caret)
library(corrplot)
library(phylolm)
library(performance)
library(see)
library(gridExtra)
ungulatesData <- read.csv("https://raw.githubusercontent.com/naturalis/trait-organismal-ungulates/master/data/CSV/ungulatesTraits.csv")
omi <- read.csv("https://raw.githubusercontent.com/naturalis/trait-geo-diverse-ungulates/master/results/OMI/niche_traits.csv")
tree <- read.tree("https://raw.githubusercontent.com/naturalis/trait-organismal-ungulates/master/data/phylogeny/ungulates.tree")
ungulatesData <- ungulatesData[2:60]
names(omi)[names(omi)=="X"] <- "CanonicalName"
dataset <- merge(ungulatesData, omi, by="CanonicalName")
dataset$CanonicalName <- gsub(" ", "_", dataset$CanonicalName)
# Clean up the global environment
rm(ungulatesData, omi)
# Changed Equus asinus to Equus africanus in the tree
tree$tip.label[tree$tip.label=="Equus_asinus"] <- "Equus_africanus"
# Check Which species aren't in the tree
dropRows <- setdiff(dataset$CanonicalName, tree$tip.label)
# Drop rows that aren't in the tree (check manually if these are domesticated)
row.names(dataset) <- dataset$CanonicalName
dataset <- dataset[!(row.names(dataset) %in% dropRows), ]
# Drop tips that aren't in dataset
dropTips <- setdiff(tree$tip.label, dataset$CanonicalName)
tree <- drop.tip(tree, dropTips)
# Final check to see if there are any differences
setdiff(dataset$CanonicalName, tree$tip.label)
setdiff(tree$tip.label, dataset$CanonicalName)
rm(dropRows, dropTips)
# Rename column with dots in the name
names(dataset)[names(dataset)=="X21.1_PopulationDensity_n.km2"] <- "X21.1_PopulationDensity_n_km2"
# Remove traits that (almost) only consist of missing values (>100 NA)
dataset <- subset(dataset, select = -c(X5.4_WeaningBodyMass_g, X13.3_WeaningHeadBodyLen_mm, X13.2_NeonateHeadBodyLen_mm, X18.1_BasalMetRate_mLO2hr, X5.2_BasalMetRateMass_g, X2.1_AgeatEyeOpening_d, X8.1_AdultForearmLen_mm, X10.1_PopulationGrpSize))
# Remove traits without any information gain (only consist of one value)
dataset <- subset(dataset, select = -c(Motility, ParentalCare, X12.2_Terrestriality))
# Remove traits that are almost identical to other traits
dataset <- subset(dataset, select = -c(PullStrength, NumOffspring, BreedingInterval, Diet, AVGWeight, MaturityReachFemale, MaturityReachMale, X22.2_HomeRange_Indiv_km2, X5.3_NeonateBodyMass_g, X16.1_LittersPerYear,X7.1_DispersalAge_d))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(ape)
library(dplyr)
library(usdm)
library(caret)
library(corrplot)
library(phylolm)
library(performance)
library(see)
library(gridExtra)
ungulatesData <- read.csv("https://raw.githubusercontent.com/naturalis/trait-organismal-ungulates/master/data/CSV/ungulatesTraits.csv")
omi <- read.csv("https://raw.githubusercontent.com/naturalis/trait-geo-diverse-ungulates/master/results/OMI/niche_traits.csv")
tree <- read.tree("https://raw.githubusercontent.com/naturalis/trait-organismal-ungulates/master/data/phylogeny/ungulates.tree")
ungulatesData <- ungulatesData[2:60]
names(omi)[names(omi)=="X"] <- "CanonicalName"
dataset <- merge(ungulatesData, omi, by="CanonicalName")
dataset$CanonicalName <- gsub(" ", "_", dataset$CanonicalName)
# Clean up the global environment
rm(ungulatesData, omi)
# Changed Equus asinus to Equus africanus in the tree
tree$tip.label[tree$tip.label=="Equus_asinus"] <- "Equus_africanus"
# Check Which species aren't in the tree
dropRows <- setdiff(dataset$CanonicalName, tree$tip.label)
# Drop rows that aren't in the tree (check manually if these are domesticated)
row.names(dataset) <- dataset$CanonicalName
dataset <- dataset[!(row.names(dataset) %in% dropRows), ]
# Drop tips that aren't in dataset
dropTips <- setdiff(tree$tip.label, dataset$CanonicalName)
tree <- drop.tip(tree, dropTips)
# Final check to see if there are any differences
setdiff(dataset$CanonicalName, tree$tip.label)
setdiff(tree$tip.label, dataset$CanonicalName)
rm(dropRows, dropTips)
# Rename column with dots in the name
names(dataset)[names(dataset)=="X21.1_PopulationDensity_n.km2"] <- "X21.1_PopulationDensity_n_km2"
# Remove traits that (almost) only consist of missing values (>100 NA)
dataset <- subset(dataset, select = -c(X5.4_WeaningBodyMass_g, X13.3_WeaningHeadBodyLen_mm, X13.2_NeonateHeadBodyLen_mm, X18.1_BasalMetRate_mLO2hr, X5.2_BasalMetRateMass_g, X2.1_AgeatEyeOpening_d, X8.1_AdultForearmLen_mm, X10.1_PopulationGrpSize))
# Remove traits without any information gain (only consist of one value)
dataset <- subset(dataset, select = -c(Motility, ParentalCare, X12.2_Terrestriality))
# Remove traits that are almost identical to other traits
dataset <- subset(dataset, select = -c(PullStrength, NumOffspring, BreedingInterval, Diet, MaturityReachFemale, MaturityReachMale, X22.2_HomeRange_Indiv_km2, X5.3_NeonateBodyMass_g, X16.1_LittersPerYear,X7.1_DispersalAge_d))
dataset$X1.1_ActivityCycle <- as.factor(dataset$X1.1_ActivityCycle)
dataset$X6.1_DietBreadth <- as.factor(dataset$X6.1_DietBreadth)
dataset$X12.1_HabitatBreadth <- as.factor(dataset$X12.1_HabitatBreadth)
dataset$X6.2_TrophicLevel <- as.factor(dataset$X6.2_TrophicLevel)
dataset$Sociality <- as.factor(dataset$Sociality)
dataset$SocialHierarchy <- as.factor(dataset$SocialHierarchy)
dataset$NumMales <- as.factor(dataset$NumMales)
dataset$MatingSystem <- as.factor(dataset$MatingSystem)
dataset$YearRoundBreeding <- as.factor(dataset$YearRoundBreeding)
dataset$DevelopmentStrategy <- as.factor(dataset$DevelopmentStrategy)
dataset$HeadOrnaments <- as.factor(dataset$HeadOrnaments)
dataset$NaturalPredators <- as.factor(dataset$NaturalPredators)
# Do the VIF analysis
source("VIF.R")
# Final VIF values
vif(vifPredictors)
# Add factor predictors to numeric predictors
factors <- dplyr::select_if(dataset, is.factor)
predictors <- cbind(vifPredictors, factors)
# Do the model selection
source("ModelSelection.R")
# Remove unneeded variables
rm(vifPredictors, factors)
# Converting dependent variable to binary state
# Domesticated = 1, wild = 0
dataset$Domestication[dataset$Domestication==2] <- 0
# Construct model
phyloGLM <- phyloglm(formula = finalFormula, data = dataset, phy = tree, method = "logistic_MPLE", btol = 36, log.alpha.bound = 4)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(ape)
library(dplyr)
library(usdm)
library(caret)
library(corrplot)
library(phylolm)
library(performance)
library(see)
library(gridExtra)
library(tidyverse)
library(naniar)
ungulatesData <- read.csv("https://raw.githubusercontent.com/naturalis/trait-organismal-ungulates/master/data/CSV/ungulatesTraits.csv")
omi <- read.csv("https://raw.githubusercontent.com/naturalis/trait-geo-diverse-ungulates/master/results/OMI/niche_traits.csv")
tree <- read.tree("https://raw.githubusercontent.com/naturalis/trait-organismal-ungulates/master/data/phylogeny/ungulates.tree")
ungulatesData <- ungulatesData[2:60]
names(omi)[names(omi)=="X"] <- "CanonicalName"
dataset <- merge(ungulatesData, omi, by="CanonicalName")
dataset$CanonicalName <- gsub(" ", "_", dataset$CanonicalName)
# Clean up the global environment
rm(ungulatesData, omi)
# Changed Equus asinus to Equus africanus in the tree
tree$tip.label[tree$tip.label=="Equus_asinus"] <- "Equus_africanus"
# Check Which species aren't in the tree
dropRows <- setdiff(dataset$CanonicalName, tree$tip.label)
# Drop rows that aren't in the tree (check manually if these are domesticated)
row.names(dataset) <- dataset$CanonicalName
dataset <- dataset[!(row.names(dataset) %in% dropRows), ]
# Drop tips that aren't in dataset
dropTips <- setdiff(tree$tip.label, dataset$CanonicalName)
tree <- drop.tip(tree, dropTips)
# Final check to see if there are any differences
setdiff(dataset$CanonicalName, tree$tip.label)
setdiff(tree$tip.label, dataset$CanonicalName)
rm(dropRows, dropTips)
# Rename column with dots in the name
names(dataset)[names(dataset)=="X21.1_PopulationDensity_n.km2"] <- "X21.1_PopulationDensity_n_km2"
# Remove traits that contain >50% missing variables
# Check the number and % missing values for all variables in the dataset
miss_var_summary(dataset)
## Remove columns with >50% NA
# let's experiment with the 0.5 threshold, might be changed
dataset <- dataset[, which(colMeans(!is.na(dataset)) > 0.5)]
# Remove traits without any information gain (only consist of one value)
#Identify which variables have zero variance
nearZeroVar(dataset)
dataset <- subset(dataset, select = -c(nearZeroVar(dataset)))
# Remove traits that are almost identical to other traits
#TODO: Hard code remove columns that are scaled copies of other columns
dataset <- subset(dataset, select = -c(AVGBodyMass, CarryWeight, PullStrength, X5.3_NeonateBodyMass_g))
#Remove columns that contain non-data taxonomic information
dataset <- subset(dataset, select = -c(CanonicalName, BinomialName, Order, Family, Genus, Species))
#TODO: Check if all columns are represented
dataset$Domestication <- as.factor(dataset$Domestication)
dataset$X1.1_ActivityCycle <- as.factor(dataset$X1.1_ActivityCycle)
dataset$X6.1_DietBreadth <- as.factor(dataset$X6.1_DietBreadth)
dataset$X12.1_HabitatBreadth <- as.factor(dataset$X12.1_HabitatBreadth)
dataset$X6.2_TrophicLevel <- as.factor(dataset$X6.2_TrophicLevel)
dataset$Diet <- as.factor(dataset$Diet)
dataset$Sociality <- as.factor(dataset$Sociality)
dataset$SocialHierarchy <- as.factor(dataset$SocialHierarchy)
dataset$NumMales <- as.factor(dataset$NumMales)
dataset$MatingSystem <- as.factor(dataset$MatingSystem)
dataset$YearRoundBreeding <- as.factor(dataset$YearRoundBreeding)
dataset$DevelopmentStrategy <- as.factor(dataset$DevelopmentStrategy)
dataset$HeadOrnaments <- as.factor(dataset$HeadOrnaments)
dataset$NaturalPredators <- as.factor(dataset$NaturalPredators)
# Do the VIF analysis
## BEGIN VALUES
# Take only the numeric predictors and remove the dependent variable
startPredictors <- dplyr::select_if(dataset, is.numeric)
startPredictors$Domestication <- NULL
# The first correlation matrix is a visualization of the dataset without the removal of any traits. There is a lot of collinearity present.
matrix <- cor(startPredictors, use = "pairwise.complete.obs")
corrplot(matrix, type="lower", order = "hclust", tl.pos = "l", tl.col = "black", tl.cex = 0.4)
## CHECK CORRELATION MATRIX
# The corrplot package is used to visualize the collinearity between the traits,
# using the correlation matrix.
# With the findCorrelation() function,
# the columns with the highest collinearity are found.
# By visualizing the matrix, the outcome of the findCorrelation function can be
# easily checked. The VIF function can be run to easily check if the results are
# still infinite. A cutoff value of .83 is chosen, using trial and error.
matrix <- cor(startPredictors, use = "pairwise.complete.obs")
delColumn <- findCorrelation(matrix, cutoff = .83, verbose = FALSE, exact=FALSE)
startPredictors <- startPredictors[,-c(delColumn)]
vif(startPredictors)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(ape)
library(dplyr)
library(usdm)
library(caret)
library(corrplot)
library(phylolm)
library(performance)
library(see)
library(gridExtra)
library(tidyverse)
library(naniar)
ungulatesData <- read.csv("https://raw.githubusercontent.com/naturalis/trait-organismal-ungulates/master/data/CSV/ungulatesTraits.csv")
omi <- read.csv("https://raw.githubusercontent.com/naturalis/trait-geo-diverse-ungulates/master/results/OMI/niche_traits.csv")
tree <- read.tree("https://raw.githubusercontent.com/naturalis/trait-organismal-ungulates/master/data/phylogeny/ungulates.tree")
ungulatesData <- ungulatesData[2:60]
names(omi)[names(omi)=="X"] <- "CanonicalName"
dataset <- merge(ungulatesData, omi, by="CanonicalName")
dataset$CanonicalName <- gsub(" ", "_", dataset$CanonicalName)
# Clean up the global environment
rm(ungulatesData, omi)
# Changed Equus asinus to Equus africanus in the tree
tree$tip.label[tree$tip.label=="Equus_asinus"] <- "Equus_africanus"
# Check Which species aren't in the tree
dropRows <- setdiff(dataset$CanonicalName, tree$tip.label)
# Drop rows that aren't in the tree (check manually if these are domesticated)
row.names(dataset) <- dataset$CanonicalName
dataset <- dataset[!(row.names(dataset) %in% dropRows), ]
# Drop tips that aren't in dataset
dropTips <- setdiff(tree$tip.label, dataset$CanonicalName)
tree <- drop.tip(tree, dropTips)
# Final check to see if there are any differences
setdiff(dataset$CanonicalName, tree$tip.label)
setdiff(tree$tip.label, dataset$CanonicalName)
rm(dropRows, dropTips)
# Rename column with dots in the name
names(dataset)[names(dataset)=="X21.1_PopulationDensity_n.km2"] <- "X21.1_PopulationDensity_n_km2"
# Remove traits that contain >50% missing variables
# Check the number and % missing values for all variables in the dataset
miss_var_summary(dataset)
## Remove columns with >50% NA
# let's experiment with the 0.5 threshold, might be changed
dataset <- dataset[, which(colMeans(!is.na(dataset)) > 0.5)]
# Remove traits without any information gain (only consist of one value)
#Identify which variables have zero variance
nearZeroVar(dataset)
dataset <- subset(dataset, select = -c(nearZeroVar(dataset)))
# Remove traits that are almost identical to other traits
#TODO: Hard code remove columns that are scaled copies of other columns
dataset <- subset(dataset, select = -c(AVGBodyMass, CarryWeight, PullStrength, X5.3_NeonateBodyMass_g))
#Remove columns that contain non-data taxonomic information
dataset <- subset(dataset, select = -c(CanonicalName, BinomialName, Order, Family, Genus, Species))
#TODO: Check if all columns are represented
dataset$Domestication <- as.factor(dataset$Domestication)
dataset$X1.1_ActivityCycle <- as.factor(dataset$X1.1_ActivityCycle)
dataset$X6.1_DietBreadth <- as.factor(dataset$X6.1_DietBreadth)
dataset$X12.1_HabitatBreadth <- as.factor(dataset$X12.1_HabitatBreadth)
dataset$X6.2_TrophicLevel <- as.factor(dataset$X6.2_TrophicLevel)
dataset$Diet <- as.factor(dataset$Diet)
dataset$Sociality <- as.factor(dataset$Sociality)
dataset$SocialHierarchy <- as.factor(dataset$SocialHierarchy)
dataset$NumMales <- as.factor(dataset$NumMales)
dataset$MatingSystem <- as.factor(dataset$MatingSystem)
dataset$YearRoundBreeding <- as.factor(dataset$YearRoundBreeding)
dataset$DevelopmentStrategy <- as.factor(dataset$DevelopmentStrategy)
dataset$HeadOrnaments <- as.factor(dataset$HeadOrnaments)
dataset$NaturalPredators <- as.factor(dataset$NaturalPredators)
# Do the VIF analysis
## BEGIN VALUES
# Take only the numeric predictors and remove the dependent variable
startPredictors <- dplyr::select_if(dataset, is.numeric)
startPredictors$Domestication <- NULL
# The first correlation matrix is a visualization of the dataset without the removal of any traits. There is a lot of collinearity present.
matrix <- cor(startPredictors, use = "pairwise.complete.obs")
corrplot(matrix, type="lower", order = "hclust", tl.pos = "l", tl.col = "black", tl.cex = 0.4)
## CHECK CORRELATION MATRIX
# The corrplot package is used to visualize the collinearity between the traits,
# using the correlation matrix.
# With the findCorrelation() function,
# the columns with the highest collinearity are found.
# By visualizing the matrix, the outcome of the findCorrelation function can be
# easily checked. The VIF function can be run to easily check if the results are
# still infinite. A cutoff value of .83 is chosen, using trial and error.
matrix <- cor(startPredictors, use = "pairwise.complete.obs")
delColumn <- findCorrelation(matrix, cutoff = .83, verbose = FALSE, exact=FALSE)
startPredictors <- startPredictors[,-c(delColumn)]
vif(startPredictors)
