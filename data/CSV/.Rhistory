knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(ape)
library(dplyr)
library(usdm)
library(caret)
library(corrplot)
library(phylolm)
library(performance)
library(see)
library(gridExtra)
ungulatesData <- read.csv("https://raw.githubusercontent.com/naturalis/trait-organismal-ungulates/master/data/CSV/ungulatesTraits.csv")
omi <- read.csv("https://raw.githubusercontent.com/naturalis/trait-geo-diverse-ungulates/master/results/OMI/niche_traits.csv")
tree <- read.tree("https://raw.githubusercontent.com/naturalis/trait-organismal-ungulates/master/data/phylogeny/ungulates.tree")
ungulatesData <- ungulatesData[2:60]
names(omi)[names(omi)=="X"] <- "CanonicalName"
dataset <- merge(ungulatesData, omi, by="CanonicalName")
dataset$CanonicalName <- gsub(" ", "_", dataset$CanonicalName)
# Clean up the global environment
rm(ungulatesData, omi)
# Changed Equus asinus to Equus africanus in the tree
tree$tip.label[tree$tip.label=="Equus_asinus"] <- "Equus_africanus"
# Check Which species aren't in the tree
dropRows <- setdiff(dataset$CanonicalName, tree$tip.label)
# Drop rows that aren't in the tree (check manually if these are domesticated)
row.names(dataset) <- dataset$CanonicalName
dataset <- dataset[!(row.names(dataset) %in% dropRows), ]
# Drop tips that aren't in dataset
dropTips <- setdiff(tree$tip.label, dataset$CanonicalName)
tree <- drop.tip(tree, dropTips)
# Final check to see if there are any differences
setdiff(dataset$CanonicalName, tree$tip.label)
setdiff(tree$tip.label, dataset$CanonicalName)
rm(dropRows, dropTips)
# Rename column with dots in the name
names(dataset)[names(dataset)=="X21.1_PopulationDensity_n.km2"] <- "X21.1_PopulationDensity_n_km2"
# Remove traits that (almost) only consist of missing values (>100 NA)
dataset <- subset(dataset, select = -c(X5.4_WeaningBodyMass_g, X13.3_WeaningHeadBodyLen_mm, X13.2_NeonateHeadBodyLen_mm, X18.1_BasalMetRate_mLO2hr, X5.2_BasalMetRateMass_g, X2.1_AgeatEyeOpening_d, X8.1_AdultForearmLen_mm, X10.1_PopulationGrpSize))
# Remove traits without any information gain (only consist of one value)
dataset <- subset(dataset, select = -c(Motility, ParentalCare, X12.2_Terrestriality))
# Remove traits that are almost identical to other traits
dataset <- subset(dataset, select = -c(PullStrength, NumOffspring, BreedingInterval, Diet, MaturityReachFemale, MaturityReachMale, X22.2_HomeRange_Indiv_km2, X5.3_NeonateBodyMass_g, X16.1_LittersPerYear,X7.1_DispersalAge_d))
dataset$X1.1_ActivityCycle <- as.factor(dataset$X1.1_ActivityCycle)
dataset$X6.1_DietBreadth <- as.factor(dataset$X6.1_DietBreadth)
dataset$X12.1_HabitatBreadth <- as.factor(dataset$X12.1_HabitatBreadth)
dataset$X6.2_TrophicLevel <- as.factor(dataset$X6.2_TrophicLevel)
dataset$Sociality <- as.factor(dataset$Sociality)
dataset$SocialHierarchy <- as.factor(dataset$SocialHierarchy)
dataset$NumMales <- as.factor(dataset$NumMales)
dataset$MatingSystem <- as.factor(dataset$MatingSystem)
dataset$YearRoundBreeding <- as.factor(dataset$YearRoundBreeding)
dataset$DevelopmentStrategy <- as.factor(dataset$DevelopmentStrategy)
dataset$HeadOrnaments <- as.factor(dataset$HeadOrnaments)
dataset$NaturalPredators <- as.factor(dataset$NaturalPredators)
# Do the VIF analysis
source("VIF.R")
# Final VIF values
vif(vifPredictors)
# Add factor predictors to numeric predictors
factors <- dplyr::select_if(dataset, is.factor)
predictors <- cbind(vifPredictors, factors)
# Do the model selection
source("ModelSelection.R")
# Remove unneeded variables
rm(vifPredictors, factors)
# Converting dependent variable to binary state
# Domesticated = 1, wild = 0
dataset$Domestication[dataset$Domestication==2] <- 0
# Construct model
phyloGLM <- phyloglm(formula = finalFormula, data = dataset, phy = tree, method = "logistic_MPLE", btol = 36, log.alpha.bound = 4)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(ape)
library(dplyr)
library(usdm)
library(caret)
library(corrplot)
library(phylolm)
library(performance)
library(see)
library(gridExtra)
ungulatesData <- read.csv("https://raw.githubusercontent.com/naturalis/trait-organismal-ungulates/master/data/CSV/ungulatesTraits.csv")
omi <- read.csv("https://raw.githubusercontent.com/naturalis/trait-geo-diverse-ungulates/master/results/OMI/niche_traits.csv")
tree <- read.tree("https://raw.githubusercontent.com/naturalis/trait-organismal-ungulates/master/data/phylogeny/ungulates.tree")
ungulatesData <- ungulatesData[2:60]
names(omi)[names(omi)=="X"] <- "CanonicalName"
dataset <- merge(ungulatesData, omi, by="CanonicalName")
dataset$CanonicalName <- gsub(" ", "_", dataset$CanonicalName)
# Clean up the global environment
rm(ungulatesData, omi)
# Changed Equus asinus to Equus africanus in the tree
tree$tip.label[tree$tip.label=="Equus_asinus"] <- "Equus_africanus"
# Check Which species aren't in the tree
dropRows <- setdiff(dataset$CanonicalName, tree$tip.label)
# Drop rows that aren't in the tree (check manually if these are domesticated)
row.names(dataset) <- dataset$CanonicalName
dataset <- dataset[!(row.names(dataset) %in% dropRows), ]
# Drop tips that aren't in dataset
dropTips <- setdiff(tree$tip.label, dataset$CanonicalName)
tree <- drop.tip(tree, dropTips)
# Final check to see if there are any differences
setdiff(dataset$CanonicalName, tree$tip.label)
setdiff(tree$tip.label, dataset$CanonicalName)
rm(dropRows, dropTips)
# Rename column with dots in the name
names(dataset)[names(dataset)=="X21.1_PopulationDensity_n.km2"] <- "X21.1_PopulationDensity_n_km2"
# Remove traits that (almost) only consist of missing values (>100 NA)
dataset <- subset(dataset, select = -c(X5.4_WeaningBodyMass_g, X13.3_WeaningHeadBodyLen_mm, X13.2_NeonateHeadBodyLen_mm, X18.1_BasalMetRate_mLO2hr, X5.2_BasalMetRateMass_g, X2.1_AgeatEyeOpening_d, X8.1_AdultForearmLen_mm, X10.1_PopulationGrpSize))
# Remove traits without any information gain (only consist of one value)
dataset <- subset(dataset, select = -c(Motility, ParentalCare, X12.2_Terrestriality))
# Remove traits that are almost identical to other traits
dataset <- subset(dataset, select = -c(PullStrength, NumOffspring, BreedingInterval, Diet, MaturityReachFemale, MaturityReachMale, X22.2_HomeRange_Indiv_km2, X5.3_NeonateBodyMass_g, X16.1_LittersPerYear,X7.1_DispersalAge_d))
dataset$X1.1_ActivityCycle <- as.factor(dataset$X1.1_ActivityCycle)
dataset$X6.1_DietBreadth <- as.factor(dataset$X6.1_DietBreadth)
dataset$X12.1_HabitatBreadth <- as.factor(dataset$X12.1_HabitatBreadth)
dataset$X6.2_TrophicLevel <- as.factor(dataset$X6.2_TrophicLevel)
dataset$Sociality <- as.factor(dataset$Sociality)
dataset$SocialHierarchy <- as.factor(dataset$SocialHierarchy)
dataset$NumMales <- as.factor(dataset$NumMales)
dataset$MatingSystem <- as.factor(dataset$MatingSystem)
dataset$YearRoundBreeding <- as.factor(dataset$YearRoundBreeding)
dataset$DevelopmentStrategy <- as.factor(dataset$DevelopmentStrategy)
dataset$HeadOrnaments <- as.factor(dataset$HeadOrnaments)
dataset$NaturalPredators <- as.factor(dataset$NaturalPredators)
# Do the VIF analysis
source("VIF.R")
# Final VIF values
vif(vifPredictors)
# Add factor predictors to numeric predictors
factors <- dplyr::select_if(dataset, is.factor)
predictors <- cbind(vifPredictors, factors)
# Do the model selection
source("ModelSelection.R")
# Remove unneeded variables
rm(vifPredictors, factors)
# Converting dependent variable to binary state
# Domesticated = 1, wild = 0
dataset$Domestication[dataset$Domestication==2] <- 0
# Construct model
phyloGLM <- phyloglm(formula = finalFormula, data = dataset, phy = tree, method = "logistic_MPLE", btol = 36, log.alpha.bound = 4)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
library(ape)
library(dplyr)
library(usdm)
library(caret)
library(corrplot)
library(phylolm)
library(performance)
library(see)
library(gridExtra)
ungulatesData <- read.csv("https://raw.githubusercontent.com/naturalis/trait-organismal-ungulates/master/data/CSV/ungulatesTraits.csv")
omi <- read.csv("https://raw.githubusercontent.com/naturalis/trait-geo-diverse-ungulates/master/results/OMI/niche_traits.csv")
tree <- read.tree("https://raw.githubusercontent.com/naturalis/trait-organismal-ungulates/master/data/phylogeny/ungulates.tree")
View(ungulatesData)
ungulatesData[ungulatesData$Domestication==2] <- 0
ungulatesData$Domestication[ungulatesData$Domestication==2] <- 0
View(ungulatesData)
setwd("~/Projects/trait-organismal-ungulates/data/CSV")
write.csv(ungulatesData, file = "ungulatesTraits.csv", quote = F, row.names = F)
